{"version":3,"sources":["theme/colors.tsx","atoms/text/P/P.tsx","atoms/text/Span/types/index.tsx","atoms/text/Span/themes/default.tsx","atoms/text/Span/themes/title.tsx","atoms/text/Span/themes/subheader.tsx","atoms/text/Span/Span.tsx","atoms/input/Button/themes/default.tsx","atoms/input/Button/types/index.tsx","atoms/input/Button/Button.tsx","atoms/links/A/types/index.tsx","models/styled-system/index.tsx","atoms/layout/Div.tsx","atoms/layout/Flex.tsx","atoms/links/A/themes/iconlink.tsx","atoms/links/A/themes/default.tsx","atoms/links/A/A.tsx","molecules/ComponentListContainer/ComponentListContainer.tsx","constants/routes.tsx","organisms/NavigationBar.tsx","organisms/BasePage.tsx","pages/Home/Home.tsx","pages/Resume/sections/WorkExperience.tsx","pages/Resume/Resume.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["colors","P","styled","p","space","width","height","fontSize","color","flex","order","alignSelf","fontFamily","fontStyle","fontWeight","textAlign","lineHeight","letterSpacing","defaultProps","SpanTheme","base","title","subheader","ThemeSelector","DEFAULT","TITLE","SUBHEADER","ThemedSpan","span","props","theme","Span","children","ButtonTheme","ThemedButton","button","Button","ATheme","baseProps","background","backgroundImage","maxWidth","minWidth","maxHeight","minHeight","size","position","overflow","zIndex","borders","Div","div","boxSizing","Flex","display","flexWrap","flexDirection","alignItems","justifyContent","iconlink","ICONLINK","BaseA","a","A","Route","StyledComponentListContainer","ComponentListContainer","NavContainer","TopStuff","NavigationBar","history","useHistory","buttonList","id","key","onClick","push","HOME","RESUME","window","alert","iconList","href","className","margin","HomeBase","Body","BasePage","bodyStyles","StyledImg","ROOT","Home","paddingTop","aria-label","marginTop","WorkExperience","style","Resume","App","exact","path","RoutePath","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8c8feaf2.chunk.js","sourcesContent":["export const colors = {\n  // shades of white\n  white: \"#FFFFFF\",\n\n  //shades of black\n  black: \"#000000\",\n\n  //shades of grey,\n  grey: \"#878787\",\n\n  //shades of yellow\n  gold: \"#E0BB00\",\n\n  //shades of red\n  red: \"#DF0808\"\n};\n","import styled from \"styled-components\";\n//import { colors } from \"Theme\";\nimport {\n  alignSelf,\n  AlignSelfProps,\n  color,\n  ColorProps,\n  flex,\n  FlexProps,\n  fontFamily,\n  fontSize,\n  fontStyle,\n  fontWeight,\n  height,\n  HeightProps,\n  letterSpacing,\n  lineHeight,\n  order,\n  OrderProps,\n  space,\n  SpaceProps,\n  textAlign,\n  TypographyProps as StyledSystemTypographyProps,\n  width,\n  WidthProps,\n} from \"styled-system\";\nimport { colors } from \"../../../theme\";\n//import { themed } from 'Utils/theme.helpers';\n\nexport type TypographyProps = ColorProps & StyledSystemTypographyProps;\n\nexport type TextProps = TypographyProps &\n  AlignSelfProps &\n  FlexProps &\n  HeightProps &\n  OrderProps &\n  SpaceProps &\n  WidthProps & { htmlFor?: string };\n\nconst P = styled.p<TextProps>(\n  space,\n  width,\n  height,\n  fontSize,\n  color,\n  flex,\n  order,\n  alignSelf,\n  fontFamily,\n  fontSize,\n  fontStyle,\n  fontWeight,\n  textAlign,\n  lineHeight,\n  letterSpacing\n  //themed('text')\n);\n\nP.defaultProps = {\n  fontSize: \"15px\",\n  color: colors.black,\n};\n\nexport default P;\n","import React from \"react\";\nimport { base, title, subheader } from \"../themes\";\n\nexport enum SpanTheme {\n  DEFAULT,\n  TITLE,\n  SUBHEADER\n}\n\nexport const ThemeSelector = {\n  [SpanTheme.DEFAULT]: base,\n  [SpanTheme.TITLE]: title,\n  [SpanTheme.SUBHEADER]: subheader\n} as const;\n\nexport interface SpanProps extends React.HTMLAttributes<HTMLSpanElement> {\n  theme: SpanTheme;\n}\n","import { colors } from \"../../../../theme\";\n\nexport const base = `\n    font-size: 15px;\n    color: ${colors.red};\n`;\n","import { colors } from \"../../../../theme\";\n\nexport const title = `\n    font-family: Copperplate;\n    font-size: 60px;\n    color: black;\n    font-weight: 600;\n    width: fit-content;\n    display: inline-table;\n    width: 40vw;\n    border-bottom: solid 2px ${colors.gold};\n\n    @media only screen and (max-width: 605px) {\n        font-size: 40px;\n      }\n`;\n","import { colors } from \"../../../../theme\";\n\nexport const subheader = `\n    font-size: 20px;\n    color: ${colors.grey};\n    font-family: Copperplate;\n    margin-top: 5px;\n    font-weight: 100;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { SpanProps, SpanTheme, ThemeSelector } from \"./types\";\n\nconst ThemedSpan = styled.span`\n  ${(props: SpanProps) => ThemeSelector[props.theme]}\n`;\n\nexport const Span = (props: SpanProps) => {\n  return <ThemedSpan {...props}>{props.children}</ThemedSpan>;\n};\n\nSpan.defaultProps = {\n  theme: SpanTheme.DEFAULT\n};\n","import { colors } from \"../../../../theme\";\n\nexport const base = `\n    height: 40px;\n    background: transparent;\n    font-size: 18px;\n    border: none;\n    border-left: solid 2px black;\n    border-right: solid 2px black;\n    border-radius: 10px;\n    cursor: pointer;\n    font-family: monospace;\n\n    :hover {\n        transition: all 0.5s;\n        border-left: solid 2px ${colors.gold};\n        border-right: solid 2px ${colors.gold};\n        color: ${colors.grey};\n    }\n\n    :focus {\n        outline: none;\n        transition: all 0.5s;\n        border-left: solid 2px ${colors.gold};\n        border-right: solid 2px ${colors.gold};\n        color: ${colors.grey};\n    }\n`;\n","import React from \"react\";\nimport { base } from \"../themes\";\n\nexport enum ButtonTheme {\n  DEFAULT = \"DEFAULT\"\n}\n\nexport const ThemeSelector = {\n  [ButtonTheme.DEFAULT]: base\n} as const;\n\nexport interface ButtonProps extends React.HTMLAttributes<HTMLButtonElement> {\n  theme: ButtonTheme;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { ButtonProps, ThemeSelector, ButtonTheme } from \"./types\";\n\nconst ThemedButton = styled.button`\n  ${(props: ButtonProps) => ThemeSelector[props.theme]}\n`;\n\nexport const Button = (props: React.HTMLAttributes<HTMLButtonElement>) => {\n  return <ThemedButton {...props}>{props.children}</ThemedButton>;\n};\n\nButton.defaultProps = {\n  theme: ButtonTheme.DEFAULT\n};\n","import { base, iconlink } from \"../themes\";\n\nexport enum ATheme {\n  DEFAULT,\n  ICONLINK\n}\n\nexport const ThemeSelector = {\n  [ATheme.DEFAULT]: base,\n  [ATheme.ICONLINK]: iconlink\n} as const;\n","import StyledSystem, {\n  ColorProps,\n  TypographyProps as StyledSystemTypographyProps,\n  space,\n  backgroundImage,\n  background,\n  color,\n  width,\n  fontSize,\n  flex,\n  order,\n  alignSelf,\n  maxWidth,\n  minWidth,\n  height,\n  maxHeight,\n  minHeight,\n  size,\n  position,\n  textAlign,\n  overflow,\n  zIndex,\n  borders,\n  fontFamily,\n  fontWeight,\n  lineHeight,\n  letterSpacing\n} from \"styled-system\";\n\nexport type TypographyProps = ColorProps & StyledSystemTypographyProps;\n\nexport type BaseProps = TypographyProps &\n  StyledSystem.SpaceProps &\n  StyledSystem.BackgroundImageProps &\n  StyledSystem.BackgroundProps &\n  StyledSystem.ColorProps &\n  StyledSystem.FontSizeProps &\n  StyledSystem.OrderProps &\n  StyledSystem.AlignSelfProps &\n  StyledSystem.SizeProps &\n  StyledSystem.WidthProps &\n  StyledSystem.HeightProps &\n  StyledSystem.MaxWidthProps &\n  StyledSystem.MinWidthProps &\n  StyledSystem.MaxHeightProps &\n  StyledSystem.MinHeightProps &\n  StyledSystem.PositionProps &\n  StyledSystem.FlexProps &\n  StyledSystem.TextAlignProps &\n  StyledSystem.ZIndexProps &\n  StyledSystem.BordersProps &\n  StyledSystem.OverflowProps;\n\n// TODO: abstract this into chunks so that its usable for multplie atoms and html elements\nexport type DivProps = BaseProps &\n  React.HTMLAttributes<HTMLDivElement> &\n  JSX.IntrinsicElements[\"div\"];\n\nexport const baseProps = [\n  space,\n  background,\n  backgroundImage,\n  color,\n  width,\n  fontSize,\n  flex,\n  order,\n  alignSelf,\n  height,\n  maxWidth,\n  minWidth,\n  maxHeight,\n  minHeight,\n  size,\n  position,\n  textAlign,\n  overflow,\n  fontFamily,\n  fontWeight,\n  lineHeight,\n  letterSpacing,\n  zIndex,\n  borders\n];\n","import styled from \"styled-components\";\nimport { DivProps, baseProps } from \"../../models/styled-system\";\n\nexport const Div: React.FunctionComponent<DivProps> = styled.div(\n  {\n    boxSizing: \"border-box\",\n    minWidth: 0\n  },\n  ...baseProps\n);\n\n//export const Div = (props: any) => styled(BaseDiv)``;\n","import styled from \"styled-components\";\nimport StyledSystem, {\n  flexWrap,\n  flexDirection,\n  alignItems,\n  justifyContent\n} from \"styled-system\";\nimport { Div } from \"./Div\";\nimport { DivProps } from \"../../models/styled-system\";\n\nexport type FlexOnlyProps = StyledSystem.AlignItemsProps &\n  StyledSystem.FlexWrapProps &\n  StyledSystem.FlexDirectionProps &\n  StyledSystem.JustifyContentProps;\n\nexport type FlexProps = FlexOnlyProps & DivProps;\n\nexport const Flex: React.FunctionComponent<FlexProps> = styled(Div)(\n  {\n    display: \"flex\"\n  },\n  flexWrap,\n  flexDirection,\n  alignItems,\n  justifyContent\n);\n","import { colors } from \"../../../../theme\";\n\nexport const iconlink = `\n    transition: all .5s;\n    cursor: pointer;\n    :hover {\n        transform: scale(1.3);\n        > svg {\n            fill: ${colors.gold};\n        }\n    }\n\n    :focus {\n        outline: none;\n        transform: scale(1.3);\n        > svg {\n            fill: ${colors.gold};\n        }\n    }\n\n    > svg {\n        fill: ${colors.black};\n        height: 30px;\n        width: 30px;\n    }\n`;\n","export const base = `\n    cursor: pointer;\n`;\n","import styled from \"styled-components\";\nimport { BaseProps, baseProps } from \"../../../models/styled-system\";\nimport { ATheme, ThemeSelector } from \"./types\";\n\nexport type AProps = BaseProps &\n  React.HTMLAttributes<HTMLAnchorElement> &\n  JSX.IntrinsicElements[\"a\"] & {\n    theme: ATheme;\n  };\n\nconst BaseA: React.FunctionComponent<AProps> = styled.a({}, ...baseProps);\n\nexport const A = styled(BaseA)`\n  ${(props: AProps) => ThemeSelector[props.theme]}\n`;\n\nA.defaultProps = {\n  theme: ATheme.DEFAULT\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { DivProps } from \"../../models/styled-system\";\nimport { Div } from \"../../atoms\";\n\nconst StyledComponentListContainer: React.FunctionComponent<DivProps> = styled(\n  Div\n)`\n  width: 100%;\n  display: inline-flex;\n  justify-content: space-evenly;\n  align-items: center;\n`;\n\nexport const ComponentListContainer = (props: DivProps) => {\n  /*\n        1. get children from props\n        2. if a child doesnt have an id, tag it with one generated from the Parents class name\n     */\n\n  return (\n    <StyledComponentListContainer {...props}>\n      {props.children}\n    </StyledComponentListContainer>\n  );\n};\n","export enum Route {\n  ROOT = \"\",\n  HOME = \"/\",\n  RESUME = \"/resume\",\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Button, A, Flex } from \"../atoms\";\nimport { FaLinkedin, FaGithub } from \"react-icons/fa\";\nimport { ATheme } from \"../atoms/links/A/types\";\nimport { ComponentListContainer } from \"../molecules/ComponentListContainer/ComponentListContainer\";\nimport { Route } from \"../constants\";\nimport { useHistory } from \"react-router-dom\";\n\n// TODO: abstract as atom\nconst NavContainer = styled.div`\n  width: 325px; //calc(100% - 20px);\n  height: 52px;\n  background-color: transparent;\n  margin-top: 20px;\n  border: solid 3px black;\n  border-radius: 10px;\n  display: inline-flex;\n  box-shadow: 0px 15px 15px 0px #cfcfcf;\n`;\n\nconst TopStuff = styled(Flex)`\n  @media only screen and (max-width: 605px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nexport const NavigationBar = () => {\n  const history = useHistory();\n  // TO DO: Abstract as molecule\n  const buttonList = [\n    <Button\n      id=\"NavBar-Home-Button\"\n      key=\"NavBar-Home-Button\"\n      onClick={() => {\n        history.push(Route.HOME);\n      }}\n    >\n      Home\n    </Button>,\n    <Button\n      id=\"NavBar-Resume-Button\"\n      key=\"NavBar-Resume-Button\"\n      onClick={() => {\n        history.push(Route.RESUME);\n      }}\n    >\n      Resume\n    </Button>,\n    <Button\n      id=\"NavBar-OtherStuff-Button\"\n      key=\"NavBar-OtherStuff-Button\"\n      onClick={() => {\n        window.alert(\"working on it...\");\n      }}\n    >\n      Other Stuff\n    </Button>,\n  ];\n\n  const iconList = [\n    <A\n      key=\"LinkedIn-ButtonIcon\"\n      theme={ATheme.ICONLINK}\n      href=\"https://www.linkedin.com/in/robert-mercado-30801990/\"\n    >\n      <FaLinkedin />\n    </A>,\n    <A\n      key=\"Github-ButtonIcon\"\n      theme={ATheme.ICONLINK}\n      href=\"https://github.com/DarkseidOmega/\"\n    >\n      <FaGithub />\n    </A>,\n  ];\n  return (\n    <TopStuff>\n      <NavContainer className=\"NavContainer\">\n        <ComponentListContainer className=\"ButtonListContainer\">\n          {buttonList}\n        </ComponentListContainer>\n      </NavContainer>\n\n      <Flex margin=\"25px 0 0 15px\" width=\"85px\">\n        <ComponentListContainer className=\"IconListContainer\">\n          {iconList}\n        </ComponentListContainer>\n      </Flex>\n    </TopStuff>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { NavigationBar } from \"./NavigationBar\";\nimport { Flex } from \"../atoms\";\n\n// TO DO: Abstract this\nconst HomeBase = styled(Flex)`\n  height: 100%;\n  width: 100%;\n  background-color: white;\n  background-size: cover;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Body = styled(Flex)`\n  padding-top: 30px;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nexport const BasePage = ({ children, bodyStyles = {} }) => {\n  return (\n    <HomeBase>\n      <NavigationBar />\n      <Body {...bodyStyles}>{children}</Body>\n    </HomeBase>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Flex, Span } from \"../../atoms\";\nimport { SpanTheme } from \"../../atoms/text/Span/types\";\nimport { BasePage } from \"../../organisms\";\nimport { Route } from \"../../constants\";\nimport P from \"../../atoms/text/P/P\";\n\nconst StyledImg = styled.div`\n  height: calc(100vh - 120px);\n  background-size: cover !important;\n  background-repeat: no-repeat !important;\n  width: 50vw;\n  background: url(${Route.ROOT}/bestest.jpg);\n  border-top-left-radius: 150px;\n  border-bottom-left-radius: 150px;\n  transition: all 0.75s;\n\n  @media only screen and (max-width: 625px) {\n    height: unset;\n  }\n`;\n\nexport const Home = () => {\n  return (\n    <BasePage>\n      <Flex\n        width=\"50vw\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        paddingTop=\"50px\"\n      >\n        <Span theme={SpanTheme.TITLE} aria-label=\"header\">\n          Robert Mercado{\" \"}\n        </Span>\n        <Span theme={SpanTheme.SUBHEADER}>\n          Software Engineer | Home Cook | Bourbon Drinker\n        </Span>\n        <Flex width=\"70%\" flexDirection=\"column\">\n          <P marginTop=\"50px\" fontFamily=\"monospace\">\n            I'm a software engineer based out of Arlington, VA.\n          </P>\n          <P fontFamily=\"monospace\">\n            I thought it'd be fun to create a component library just to build\n            this personal website ¯\\_(ツ)_/¯ -- never take the path of least\n            resistance, amirite? It's still a work in progress.\n          </P>\n          <P fontFamily=\"monospace\">\n            If you wish to contact me about work stuffs, the best way is via\n            LinkedIn (see button by the nav bar).\n          </P>\n        </Flex>\n      </Flex>\n      <StyledImg />\n    </BasePage>\n  );\n};\n","import React from \"react\";\nimport { Flex, Span } from \"../../../atoms\";\n\nexport const WorkExperience = () => {\n  return (\n    <Flex flexDirection=\"column\">\n      <h2>Work Experience</h2>\n      {/* Remine section */}\n      <Flex flexDirection=\"column\" textAlign=\"left\">\n        <h3>Remine</h3>\n        {/* Remine section Body*/}\n        <Flex flexDirection=\"column\">\n          <Flex justifyContent=\"space-between\">\n            <Span>Full Stack Software Engineer</Span>\n            <Span>2018 - Present</Span>\n          </Flex>\n          <Flex flexDirection=\"column\" width=\"600px\">\n            <ul style={{ textAlign: \"left\" }}>\n              <li>\n                Transitioned into a full stack engineer, executing on high level\n                plans to deliver on high priority and visibility projects.\n              </li>\n              <li>\n                Built reusable, responsive, ADA-compliant React components\n                (using functional and class-based paradigms).\n              </li>\n              <li>\n                Built efficient backend modules responsible for processing\n                copious amounts of data using TypeScript, SQL, ELK.\n              </li>\n              <li>Contributed to company hiring decisions.</li>\n              <li>Coached and Mentored junior engineers. </li>\n              <li>\n                Led the end to end development effort on architecting, planning,\n                and executing on a major high visibility integration feature\n                with a major consumer credit reporting agency.\n              </li>\n              <li>\n                Built a robust fault-tolerant system that is responsible for\n                securely processing thousands of requests containing sensitive\n                personal data.\n              </li>\n              <li>\n                Took the reins of a critically behind-schedule project and\n                delivered a robust solution on time; fulfilling important\n                contractual obligations on an extremely aggressive timeline.\n              </li>\n            </ul>\n          </Flex>\n        </Flex>\n      </Flex>\n      {/* Accenture Section */}\n      <Flex flexDirection=\"column\" textAlign=\"left\">\n        <h3>Accenture</h3>\n        <Flex flexDirection=\"column\">\n          <Flex justifyContent=\"space-between\">\n            <Span>Software Developer Analyst</Span>\n            <Span>2015 - 2018</Span>\n          </Flex>\n          <Flex flexDirection=\"column\" width=\"600px\">\n            <ul style={{ textAlign: \"left\" }}>\n              <li>\n                Primary responsibilities include research, design, and\n                implementation of scalable Java micro-services to process large\n                volumes of data daily for a client payment system.\n              </li>\n              <li>\n                Shouldered duties as the primary developer for an R&D effort and\n                performed the bulk of the development for the system.\n              </li>\n              <li>\n                Collaborated closely with leads and other team members to create\n                suitable designs to meet a fickle client's expectations on a\n                tight schedule.\n              </li>\n              <li>\n                Provided support, guidance, and knowledge for other developers\n                and functional team members despite my relatively junior status.\n              </li>\n              <li>\n                Scrutinize client requests and business requirement documents to\n                identify edge case issues.\n              </li>\n            </ul>\n          </Flex>\n        </Flex>\n      </Flex>\n      <h3>Northrop Grumman</h3>\n      <h3>SPS</h3>\n      <h3>Trident Systems Inc.</h3>\n    </Flex>\n  );\n};\n","import React from \"react\";\nimport { BasePage } from \"../../organisms\";\nimport { Flex } from \"../../atoms\";\nimport { WorkExperience } from \"./sections/WorkExperience\";\n\nexport const Resume = () => {\n  return (\n    <BasePage bodyStyles={{ flexDirection: \"column\", alignItems: \"center\" }}>\n      <h1>Resume</h1>\n      <WorkExperience />\n      <Flex>\n        <h2>Skills and Technologies</h2>\n      </Flex>\n      <Flex>\n        <h2>Education</h2>\n      </Flex>\n    </BasePage>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport { Home } from \"./pages\";\nimport { Route as RoutePath } from \"./constants\";\nimport { Resume } from \"./pages/Resume/Resume\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path={RoutePath.HOME}>\n            <Home />\n          </Route>\n          <Route exact path={RoutePath.RESUME}>\n            <Resume />\n          </Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}